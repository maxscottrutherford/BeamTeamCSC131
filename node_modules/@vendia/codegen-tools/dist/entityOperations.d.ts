import { VendiaSchema } from './schema.js';
export declare const SCALAR_VALUE_ALIAS = "value";
export declare const topLevelTypes: {
    ARRAY_OF_OBJECTS: string;
    ARRAY_OF_SCALARS: string;
    OBJECT: string;
    SCALAR: string;
};
interface EntitySummary {
    type: string;
    description: string;
    properties: Record<string, any>;
    hasAcl: boolean;
    topLevelType: string;
}
type EntitySummaries = Record<string, EntitySummary>;
export declare function getEntitiesFromJsonSchema(schema: VendiaSchema): EntitySummaries;
export declare function getResultFields({ properties, insertTypename, }: {
    properties: Record<string, any>;
    insertTypename?: boolean;
}): string;
export declare function generateGetOperation({ entity, entities, schema, schemaNamespace, }: {
    entity: keyof EntitySummaries;
    entities: EntitySummaries;
    schema: VendiaSchema;
    schemaNamespace: string;
}): string;
export declare function generateListOperation({ entity, entities, schemaNamespace, }: {
    entity: string;
    entities: EntitySummaries;
    schemaNamespace: string;
}): string | undefined;
interface OperationOptions {
    entity: keyof EntitySummaries;
    entities: EntitySummaries;
    schema: VendiaSchema;
    schemaNamespace: string;
}
export declare function generateAddOperation({ entity, entities, schema, schemaNamespace }: OperationOptions): string;
export declare function generatePutOperation({ entity, entities, schema, schemaNamespace }: OperationOptions): string;
export declare function generateUpdateOperation({ entity, entities, schema, schemaNamespace }: OperationOptions): string;
export declare function generateDeleteOperation({ entity, entities, schema, schemaNamespace }: OperationOptions): string;
export declare const generateEntityOperations: (schema: VendiaSchema, schemaNamespace: string) => string;
export {};
