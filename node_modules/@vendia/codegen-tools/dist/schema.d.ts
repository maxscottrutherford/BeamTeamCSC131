import { Schema } from 'jsonschema';
export type SchemaPath = (string | number)[];
export type ScalarType = 'string' | 'number' | 'boolean' | 'integer';
export type ComplexType = 'object' | 'array';
export type SchemaType = ScalarType | ComplexType;
export declare const VendiaUniqueKey = "x-vendia-unique";
export declare const VendiaIndexesKey = "x-vendia-indexes";
export declare const VendiaAclsKey = "x-vendia-acls";
export interface JsonSchema extends Schema {
    items?: JsonSchema;
    definitions?: {
        [name: string]: JsonSchema;
    };
    properties?: {
        [name: string]: JsonSchema;
    };
    required?: string[];
    [VendiaUniqueKey]?: string[];
}
export interface VendiaSchema extends JsonSchema {
    [VendiaIndexesKey]?: Record<string, {
        type: string;
        property: string;
    }[]>;
    [VendiaAclsKey]?: Record<string, {
        type: string;
    }>;
    properties: {
        [name: string]: ArrayEntitySchema | JsonSchema;
    };
    type: string;
}
export interface ArrayEntitySchema extends JsonSchema {
    items: ObjectSchema;
    type: string;
}
export interface ObjectSchema extends JsonSchema {
    properties: {
        [name: string]: JsonSchema;
    };
    required: string[];
    [VendiaUniqueKey]: string[];
    type: string;
}
export type Dataset = {
    [key: string]: string | number | boolean | null;
}[];
