import { ClientOptions, Logger } from './types';
export interface AuthStateChangeEvent {
    type: 'LOGGED_IN' | 'LOGGED_OUT' | 'SET_TOKEN' | 'ERROR';
    token?: string | null;
}
export interface AuthAdapter {
    login: ({ username, password }: {
        username: string;
        password: string;
    }) => Promise<{
        accessToken: string;
    }>;
    logout: () => Promise<void>;
    getUser: () => Promise<any>;
    isAuthenticated: () => Promise<boolean>;
}
export declare const createAuth: (options: ClientOptions, { _logger }: {
    _logger: Logger;
}) => {
    _onAuthStateChange: (callback: (event: AuthStateChangeEvent) => void) => void;
    auth: {
        login: ({ username, password }: {
            username: string;
            password: string;
        }) => Promise<void>;
        logout: () => void;
        getUser: () => Promise<any>;
        isAuthenticated: () => Promise<boolean>;
        onAuthStateChange: (callback: (event: AuthStateChangeEvent) => void) => void;
        /**
         * Set a JWT token to use with Vendia's Custom JWT auth option
         * @param token - the JWT access token created by your auth provider. Do not add the "Bearer" prefix to the token.
         */
        setToken: (token: string | null) => void;
    };
};
