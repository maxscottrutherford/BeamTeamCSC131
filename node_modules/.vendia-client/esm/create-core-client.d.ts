import { GraphQLClient, RequestDocument, Variables } from 'graphql-request';
import { createAuth } from './create-auth';
import { ClientOptions, Logger } from './types';
export declare const createCoreClient: (options: ClientOptions, { _logger, _onAuthStateChange, }: {
    _logger: Logger;
    _onAuthStateChange?: ReturnType<typeof createAuth>['_onAuthStateChange'];
}) => {
    _gqlClient: GraphQLClient;
    _requestWrapper: <T>(action: (requestHeaders?: Record<string, string>) => Promise<T>, operationName: string, attempt?: number) => Promise<T>;
    request: <T_1 = any, V = Variables>(document: RequestDocument, variables?: V, requestHeaders?: HeadersInit | undefined) => Promise<T_1>;
};
