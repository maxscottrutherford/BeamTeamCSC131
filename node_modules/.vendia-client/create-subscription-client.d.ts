import { ASTNode } from 'graphql';
import { ExecutionResult } from 'graphql-ws';
import { createAuth } from './create-auth';
import { ClientOptions, Logger } from './types';
type ObservableHandler = (value: ExecutionResult<Record<string, unknown>, unknown>) => void;
export interface SubscribeOptions {
    query: ASTNode;
    variables?: Record<string, unknown>;
}
export declare const createSubscriptionClient: (options: ClientOptions, { _logger, _onAuthStateChange, }: {
    _logger: Logger;
    _onAuthStateChange?: ReturnType<typeof createAuth>['_onAuthStateChange'];
}) => {
    _subscribe: ({ query, variables }: SubscribeOptions, handler: ObservableHandler) => () => void;
};
export {};
