[{"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\index.js":"1","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\App.js":"2","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\reportWebVitals.js":"3","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\firebase.js":"4","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Navbar.js":"5","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Signup.js":"6","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Demo.js":"7","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Login.js":"8","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Home.js":"9","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\NoMatch.js":"10","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\DeviceListPage.js":"11","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Protected.jsx":"12","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\About.js":"13","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Context\\AuthContext.jsx":"14","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\vendiaClient.js":"15","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\HeroSection.js":"16","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Modal.js":"17","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\TestModal.js":"18","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\SummaryModal.js":"19"},{"size":529,"mtime":1699954418885,"results":"20","hashOfConfig":"21"},{"size":4076,"mtime":1699520117474,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1699520117482,"results":"23","hashOfConfig":"21"},{"size":1016,"mtime":1699520117481,"results":"24","hashOfConfig":"21"},{"size":1803,"mtime":1699952024928,"results":"25","hashOfConfig":"21"},{"size":2940,"mtime":1699520117481,"results":"26","hashOfConfig":"21"},{"size":7708,"mtime":1699995518166,"results":"27","hashOfConfig":"21"},{"size":2944,"mtime":1699520117479,"results":"28","hashOfConfig":"21"},{"size":5053,"mtime":1700123755743,"results":"29","hashOfConfig":"21"},{"size":221,"mtime":1699520117480,"results":"30","hashOfConfig":"21"},{"size":12015,"mtime":1699995528008,"results":"31","hashOfConfig":"21"},{"size":332,"mtime":1699520117480,"results":"32","hashOfConfig":"21"},{"size":444,"mtime":1699520117478,"results":"33","hashOfConfig":"21"},{"size":883,"mtime":1699954435492,"results":"34","hashOfConfig":"21"},{"size":315,"mtime":1699850577392,"results":"35","hashOfConfig":"21"},{"size":353,"mtime":1699561322081,"results":"36","hashOfConfig":"21"},{"size":3642,"mtime":1699857704765,"results":"37","hashOfConfig":"21"},{"size":2403,"mtime":1699854027029,"results":"38","hashOfConfig":"21"},{"size":2985,"mtime":1700123849593,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k1ygtf",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\index.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\App.js",["103","104","105","106","107","108","109"],[],"import './App.css';\r\nimport { Demo } from './Routes/Demo';\r\nimport DevicePage from './Routes/DeviceListPage';\r\nimport Signup from './Routes/Signup';\r\nimport Login from './Routes/Login';\r\nimport { NoMatch } from './Routes/NoMatch';\r\nimport { default as Home  } from './Routes/Home';\r\nimport { About } from './Routes/About';\r\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\r\nimport { auth } from './firebase.js';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  Outlet,\r\n  Navigate,\r\n  useParams,\r\n  useNavigate,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport { AuthContext } from './Context/AuthContext';\r\nimport { Protected } from './Routes/Protected';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from './Navbar';\r\n\r\n\r\n\r\nfunction AppLayout() {\r\n  const navigate = useNavigate();\r\n  //function to handle logout\r\n  const handleLogout = () => {\r\n    signOut(auth).then(() =>{\r\n      //sign-out successful\r\n      navigate('/login');\r\n      console.log(\"Signed out successfully.\")\r\n    }).catch((error) => {\r\n      //error occured\r\n    });\r\n  }\r\n\r\n  //getting user info\r\n  useEffect(() =>{\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        //user is signed in\r\n        const uid=user.uid;\r\n        console.log(\"uid\", uid)\r\n      } else {\r\n        //User is signed out\r\n        console.log(\"user is logged out\")\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      {/* <nav className=\"navbar navbar-expand-lg navbar-light bg-light justify-content-between\">\r\n        <Link to=\"/\" className=\"navbar-brand\">Home</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse mx-auto\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/devicelist' className=\"nav-link\">Device List</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/demo' className=\"nav-link\">Add Device</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <button onClick={handleLogout} className=\"btn btn-primary\">\r\n          Logout\r\n        </button>\r\n      </nav> */}\r\n    \r\n    \r\n      \r\n   {/* <nav class=\"navbar\">\r\n        <Link to=\"/\"  class=\"navlistitem\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/about\" class=\"navlistitem\">\r\n          About\r\n        </Link>\r\n        <Link to='/devicelist' class=\"navlistitem\">\r\n          Device List\r\n        </Link>\r\n        <Link to='/demo' class=\"navlistitem\">\r\n          Add Device\r\n        </Link>\r\n        <Link to='/login' class=\"navlistitem\">\r\n          Login\r\n        </Link>\r\n        <p onClick={handleLogout} class=\"navlistitem\" id=\"logout-button\">\r\n          Logout\r\n        </p>\r\n    </nav>  */}\r\n      \r\n      <Routes>\r\n        <Route path='/' element={<Protected><Home /></Protected>} />\r\n        <Route path='/about' element={<Protected><About /></Protected>} />\r\n        <Route path='/devicelist' element={<Protected><DevicePage /></Protected>} />\r\n        <Route path='/demo' element={<Protected><Demo/></Protected>} />\r\n        <Route path='/signup' element={<Signup />} />\r\n        <Route path='/login' element={<Login />} />\r\n        <Route path='*' element={<NoMatch />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* Main App (Landing Page for everything) */\r\n/* Testing comment */\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <AuthContext>\r\n          <Router>\r\n            <Navbar />\r\n            <AppLayout />\r\n          </Router>\r\n         </AuthContext>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\reportWebVitals.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\firebase.js",["110"],[],"// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getAuth } from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDpve5b4KUGzZmqFB4LOnkBaliJHAl6aNM\",\r\n  authDomain: \"csc131beamteam.firebaseapp.com\",\r\n  projectId: \"csc131beamteam\",\r\n  storageBucket: \"csc131beamteam.appspot.com\",\r\n  messagingSenderId: \"830170486870\",\r\n  appId: \"1:830170486870:web:319cb6b575aa1148a0c3f7\",\r\n  measurementId: \"G-6X9T8B30LN\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\n//Initialize Firebase Authentication and get a reference to the service\r\nexport const auth = getAuth(app);\r\nexport default app;","C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Navbar.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Signup.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Demo.js",["111","112"],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Login.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Home.js",["113"],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\NoMatch.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\DeviceListPage.js",["114","115"],[],"import React, { useState, useEffect } from 'react';\r\nimport { vendiaClient } from '../vendiaClient';\r\nimport { Table, Button, Modal, Form } from 'react-bootstrap';\r\n\r\nconst TableDesign = () => {\r\n    const { client } = vendiaClient();\r\n    const [testData, setTestData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [editRowIndex, setEditRowIndex] = useState(null);\r\n    const [editedData, setEditedData] = useState({});\r\n    const [devices, setDevices] = useState([]);\r\n    const [selectedDevices, setSelectedDevices] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchDataFromTable = async () => {\r\n            try {\r\n                const response = await client.entities.test.list({ readMode: \"NODE_LEDGERED\" });\r\n                setTestData(response.items);\r\n                setFilteredData(response.items); // Initialize filteredData with all data\r\n            } catch (error) {\r\n                console.error('Error fetching data from table:', error);\r\n            }\r\n        };\r\n\r\n        fetchDataFromTable();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update filteredData whenever testData changes\r\n        setFilteredData(testData);\r\n    }, [testData]);\r\n\r\n    useEffect(() => {\r\n        // Fetch devices from the vendia API\r\n        const fetchDevices = async () => {\r\n            try {\r\n                const response = await client.entities.device.list({ readMode: \"NODE_LEDGERED\" });\r\n                setDevices(response.items);\r\n            } catch (error) {\r\n                console.error('Error fetching devices from Vendia:', error);\r\n            }\r\n        };\r\n\r\n        fetchDevices();\r\n    }, []);\r\n\r\n    const handleSearch = (e) => {\r\n        const searchText = e.target.value.toLowerCase();\r\n        setSearchTerm(searchText);\r\n\r\n        // Filter data based on search term and selected devices\r\n        const filteredResults = testData.filter((item) =>\r\n            Object.values(item).some(\r\n                (value) =>\r\n                    value &&\r\n                    typeof value === 'string' &&\r\n                    value.toLowerCase().includes(searchText)\r\n            )\r\n        );\r\n\r\n        // Apply device filter\r\n        if (selectedDevices.length > 0) {\r\n            setFilteredData(filteredResults.filter((item) =>\r\n                selectedDevices.includes(item.Device)\r\n            ));\r\n        } else {\r\n            setFilteredData(filteredResults);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (index) => {\r\n        setShowModal(true);\r\n        setEditedData(filteredData[index]);\r\n        setEditRowIndex(index);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        const { _owner, _acl, ...updatedData } = editedData;\r\n        const updatedTestData = [...testData];\r\n        updatedTestData[editRowIndex] = updatedData;\r\n        setTestData(updatedTestData);\r\n\r\n        try {\r\n            await client.entities.test.update(updatedData);\r\n            const response = await client.entities.test.get(updatedData._id);\r\n            const updatedTestDataAfterSave = updatedTestData.map((item) =>\r\n                item._id === response._id ? response : item\r\n            );\r\n            setTestData(updatedTestDataAfterSave);\r\n            setShowModal(false);\r\n        } catch (error) {\r\n            console.error('Error updating data in Vendia:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index) => {\r\n        const updatedTestData = [...testData];\r\n        const deletedItem = updatedTestData.splice(index, 1)[0];\r\n        setTestData(updatedTestData);\r\n\r\n        try {\r\n            await client.entities.test.remove(deletedItem._id);\r\n        } catch (error) {\r\n            console.error('Error deleting data in Vendia:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeviceChange = (deviceName) => {\r\n        const updatedDevices = [...selectedDevices];\r\n        const index = updatedDevices.indexOf(deviceName);\r\n\r\n        if (index !== -1) {\r\n            // Device is already selected, remove it\r\n            updatedDevices.splice(index, 1);\r\n        } else {\r\n            // Device is not selected, add it\r\n            updatedDevices.push(deviceName);\r\n        }\r\n\r\n        setSelectedDevices(updatedDevices);\r\n\r\n        // Filter data based on search term and selected devices\r\n        const filteredResults = testData.filter((item) =>\r\n            Object.values(item).some(\r\n                (value) =>\r\n                    value &&\r\n                    typeof value === 'string' &&\r\n                    value.toLowerCase().includes(searchTerm)\r\n            )\r\n        );\r\n\r\n        // Apply device filter\r\n        if (updatedDevices.length > 0) {\r\n            setFilteredData(filteredResults.filter((item) =>\r\n                updatedDevices.includes(item.Device)\r\n            ));\r\n        } else {\r\n            setFilteredData(filteredResults);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mb-3\">\r\n                    <h1 className=\"text-center\">Device Tests</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-8\" style={{ width: '100%', margin: '0 auto' }}>\r\n                    <Form>\r\n                        <Form.Group controlId=\"searchTerm\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Search by Name\"\r\n                                value={searchTerm}\r\n                                onChange={handleSearch}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <div className=\"mb-3\">\r\n                        {devices.map((device, index) => (\r\n                            <Form.Check\r\n                                key={index}\r\n                                type=\"checkbox\"\r\n                                label={device.DeviceName}\r\n                                checked={selectedDevices.includes(device.DeviceName)}\r\n                                onChange={() => handleDeviceChange(device.DeviceName)}\r\n                                inline\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <Table responsive striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Org Assignment</th>\r\n                                <th>Name</th>\r\n                                <th>Method</th>\r\n                                <th>Notes</th>\r\n                                <th>Completed</th>\r\n                                <th>Updated By</th>\r\n                                <th>Device</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.map((row, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{row.TestID}</td>\r\n                                    <td>{row.OrgAssignment}</td>\r\n                                    <td>{row.TestName}</td>\r\n                                    <td>{row.TestMethod}</td>\r\n                                    <td>{row.Notes}</td>\r\n                                    <td>{row.Completed ? 'Completed' : 'Not Completed'}</td>\r\n                                    <td>{row.UpdatedBy}</td>\r\n                                    <td>{row.Device}</td>\r\n                                    <td>\r\n                                        <Button variant=\"primary\" onClick={() => handleEdit(index)}>\r\n                                            Update\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <Button variant=\"danger\" onClick={() => handleDelete(index)}>\r\n                                            Delete\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Data</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"form-group\">\r\n                        <label>ID</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.TestID}\r\n                            onChange={(e) => setEditedData({ ...editedData, TestID: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Org Assignment</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.OrgAssignment}\r\n                            onChange={(e) => setEditedData({ ...editedData, OrgAssignment: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.TestName}\r\n                            onChange={(e) => setEditedData({ ...editedData, TestName: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Method</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.TestMethod}\r\n                            onChange={(e) => setEditedData({ ...editedData, TestMethod: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Notes</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.Notes}\r\n                            onChange={(e) => setEditedData({ ...editedData, Notes: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Completed</label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={editedData.Completed}\r\n                            onChange={(e) => setEditedData({ ...editedData, Completed: e.target.checked })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Updated By</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.UpdatedBy}\r\n                            onChange={(e) => setEditedData({ ...editedData, UpdatedBy: e.target.value })}\r\n                        />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n",[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Protected.jsx",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\About.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Context\\AuthContext.jsx",["116"],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\vendiaClient.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\HeroSection.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\Modal.js",[],[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\TestModal.js",[],[],"C:\\Users\\mabur\\Desktop\\College\\SacState\\CSC131\\MainRepo6\\BeamTeamCSC131\\src\\Routes\\SummaryModal.js",[],[],{"ruleId":"117","severity":1,"message":"118","line":11,"column":10,"nodeType":"119","messageId":"120","endLine":11,"endColumn":18},{"ruleId":"117","severity":1,"message":"121","line":17,"column":3,"nodeType":"119","messageId":"120","endLine":17,"endColumn":7},{"ruleId":"117","severity":1,"message":"122","line":18,"column":3,"nodeType":"119","messageId":"120","endLine":18,"endColumn":9},{"ruleId":"117","severity":1,"message":"123","line":19,"column":3,"nodeType":"119","messageId":"120","endLine":19,"endColumn":11},{"ruleId":"117","severity":1,"message":"124","line":20,"column":3,"nodeType":"119","messageId":"120","endLine":20,"endColumn":12},{"ruleId":"117","severity":1,"message":"125","line":22,"column":3,"nodeType":"119","messageId":"120","endLine":22,"endColumn":11},{"ruleId":"117","severity":1,"message":"126","line":34,"column":9,"nodeType":"119","messageId":"120","endLine":34,"endColumn":21},{"ruleId":"117","severity":1,"message":"127","line":22,"column":7,"nodeType":"119","messageId":"120","endLine":22,"endColumn":16},{"ruleId":"117","severity":1,"message":"128","line":16,"column":12,"nodeType":"119","messageId":"120","endLine":16,"endColumn":20},{"ruleId":"117","severity":1,"message":"129","line":40,"column":19,"nodeType":"119","messageId":"120","endLine":40,"endColumn":36},{"ruleId":"117","severity":1,"message":"121","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":28,"column":8,"nodeType":"132","endLine":28,"endColumn":10,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":47,"column":8,"nodeType":"132","endLine":47,"endColumn":10,"suggestions":"135"},{"ruleId":"130","severity":1,"message":"136","line":21,"column":8,"nodeType":"132","endLine":21,"endColumn":10,"suggestions":"137"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Outlet' is defined but never used.","'Navigate' is defined but never used.","'useParams' is defined but never used.","'Redirect' is defined but never used.","'handleLogout' is assigned a value but never used.","'analytics' is assigned a value but never used.","'testList' is assigned a value but never used.","'addDeviceResponse' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'client.entities.test'. Either include it or remove the dependency array.","ArrayExpression",["138"],"React Hook useEffect has a missing dependency: 'client.entities.device'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["140"],{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [client.entities.test]",{"range":"147","text":"148"},"Update the dependencies array to be: [client.entities.device]",{"range":"149","text":"150"},"Update the dependencies array to be: [auth]",{"range":"151","text":"152"},[1188,1190],"[client.entities.test]",[1783,1785],"[client.entities.device]",[671,673],"[auth]"]