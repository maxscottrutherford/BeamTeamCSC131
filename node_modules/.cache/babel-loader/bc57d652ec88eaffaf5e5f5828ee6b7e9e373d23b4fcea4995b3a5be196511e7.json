{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabur\\\\Desktop\\\\College\\\\SacState\\\\CSC131\\\\MainRepo6\\\\BeamTeamCSC131\\\\src\\\\Routes\\\\TestModal.js\",\n  _s = $RefreshSig$();\n// TestModal.js\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { vendiaClient } from '../vendiaClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestModal = ({\n  deviceId,\n  deviceName,\n  onClose\n}) => {\n  _s();\n  const {\n    client\n  } = vendiaClient();\n  const [tests, setTests] = useState([]);\n  useEffect(() => {\n    const fetchTestsForDevice = async () => {\n      try {\n        const response = await client.entities.test.list({\n          filter: {\n            Device: {\n              eq: deviceName\n            }\n          }\n        });\n        setTests(response.items);\n      } catch (error) {\n        console.error('Error fetching tests from table:', error);\n      }\n    };\n    fetchTestsForDevice();\n  }, [client, deviceName]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [\"Tests for \", deviceName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: test.TestName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Method: \", test.TestMethod]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Notes: \", test.Notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, test._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(TestModal, \"FxEWQGYuZijDeGUIGSMauBw8Rzg=\");\n_c = TestModal;\nexport default TestModal;\nvar _c;\n$RefreshReg$(_c, \"TestModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","vendiaClient","jsxDEV","_jsxDEV","TestModal","deviceId","deviceName","onClose","_s","client","tests","setTests","fetchTestsForDevice","response","entities","test","list","filter","Device","eq","items","error","console","show","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","TestName","TestMethod","Notes","_id","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/src/Routes/TestModal.js"],"sourcesContent":["// TestModal.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport { vendiaClient } from '../vendiaClient';\r\n\r\nconst TestModal = ({ deviceId, deviceName, onClose }) => {\r\n    const { client } = vendiaClient();\r\n    const [tests, setTests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTestsForDevice = async () => {\r\n            try {\r\n                const response = await client.entities.test.list({\r\n                    filter: {\r\n                        Device: { eq: deviceName },\r\n                    },\r\n                });\r\n                setTests(response.items);\r\n            } catch (error) {\r\n                console.error('Error fetching tests from table:', error);\r\n            }\r\n        };\r\n\r\n        fetchTestsForDevice();\r\n    }, [client, deviceName]);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Tests for {deviceName}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {tests.map((test) => (\r\n                    <div key={test._id}>\r\n                        <h5>{test.TestName}</h5>\r\n                        <p>Method: {test.TestMethod}</p>\r\n                        <p>Notes: {test.Notes}</p>\r\n                        {/* Add more test details as needed */}\r\n                    </div>\r\n                ))}\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onClose}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TestModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}