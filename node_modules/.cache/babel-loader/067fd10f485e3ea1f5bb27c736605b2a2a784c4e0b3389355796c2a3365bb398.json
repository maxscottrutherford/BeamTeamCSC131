{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabur\\\\Desktop\\\\College\\\\SacState\\\\CSC131\\\\MainRepo6\\\\BeamTeamCSC131\\\\src\\\\Routes\\\\SummaryModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { vendiaClient } from '../vendiaClient';\nimport { Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SummaryModal = ({\n  deviceId,\n  onHide\n}) => {\n  _s();\n  const {\n    client\n  } = vendiaClient();\n  const [completedTests, setCompletedTests] = useState([]);\n  const [incompleteTests, setIncompleteTests] = useState([]);\n  useEffect(() => {\n    const lowerCaseDeviceId = deviceId.trim().toLowerCase(); // Define lowerCaseDeviceId\n\n    const fetchTestsForDevice = async () => {\n      try {\n        // Fetch tests associated with the device\n        const testsResponse = await client.entities.test.list();\n        console.log(\"testsResponse\", testsResponse);\n        // Wait for the tests to be fetched\n        await new Promise(resolve => setTimeout(resolve, 500)); // Adjust the delay as needed\n\n        const deviceTests = testsResponse.items.filter(test => test.Device === testsResponse.DeviceName);\n\n        // Separate completed and incomplete tests\n        const completed = deviceTests.filter(test => test.Completed);\n        console.log(\"completed\", completed.length);\n        const incomplete = deviceTests.filter(test => !test.Completed);\n        console.log(\"incomplete\", incomplete.length);\n        setCompletedTests(completed);\n        setIncompleteTests(incomplete);\n      } catch (error) {\n        console.error('Error fetching tests for device:', error);\n      }\n    };\n    fetchTestsForDevice();\n  }, [client, deviceId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: onHide,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tests Completed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), \" \", completedTests.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tests Incompleted:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), \" \", incompleteTests.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SummaryModal, \"EQCVrDpweIpBV0SaSMLWG6xFkKc=\");\n_c = SummaryModal;\nexport default SummaryModal;\nvar _c;\n$RefreshReg$(_c, \"SummaryModal\");","map":{"version":3,"names":["React","useState","useEffect","vendiaClient","Modal","Button","jsxDEV","_jsxDEV","SummaryModal","deviceId","onHide","_s","client","completedTests","setCompletedTests","incompleteTests","setIncompleteTests","lowerCaseDeviceId","trim","toLowerCase","fetchTestsForDevice","testsResponse","entities","test","list","console","log","Promise","resolve","setTimeout","deviceTests","items","filter","Device","DeviceName","completed","Completed","length","incomplete","error","show","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/src/Routes/SummaryModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { vendiaClient } from '../vendiaClient';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst SummaryModal = ({ deviceId, onHide }) => {\r\n    const { client } = vendiaClient();\r\n    const [completedTests, setCompletedTests] = useState([]);\r\n    const [incompleteTests, setIncompleteTests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const lowerCaseDeviceId = deviceId.trim().toLowerCase(); // Define lowerCaseDeviceId\r\n\r\n        const fetchTestsForDevice = async () => {\r\n            try {\r\n                // Fetch tests associated with the device\r\n                const testsResponse = await client.entities.test.list();\r\n                console.log(\"testsResponse\", testsResponse);\r\n                // Wait for the tests to be fetched\r\n                await new Promise((resolve) => setTimeout(resolve, 500)); // Adjust the delay as needed\r\n\r\n                const deviceTests = testsResponse.items.filter((test) => test.Device === testsResponse.DeviceName);\r\n\r\n                // Separate completed and incomplete tests\r\n                const completed = deviceTests.filter((test) => test.Completed);\r\n                console.log(\"completed\", completed.length);\r\n                const incomplete = deviceTests.filter((test) => !test.Completed);\r\n                console.log(\"incomplete\", incomplete.length);\r\n\r\n                setCompletedTests(completed);\r\n                setIncompleteTests(incomplete);\r\n            } catch (error) {\r\n                console.error('Error fetching tests for device:', error);\r\n            }\r\n        };\r\n\r\n        fetchTestsForDevice();\r\n    }, [client, deviceId]);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onHide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Summary</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <p>\r\n                        <strong>Tests Completed:</strong> {completedTests.length}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Tests Incompleted:</strong> {incompleteTests.length}\r\n                    </p>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onHide}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SummaryModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}