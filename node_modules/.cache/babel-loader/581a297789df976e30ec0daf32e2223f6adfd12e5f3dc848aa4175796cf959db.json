{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabur\\\\Desktop\\\\College\\\\SacState\\\\CSC131\\\\MainRepo6\\\\BeamTeamCSC131\\\\src\\\\Routes\\\\SummaryModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { vendiaClient } from '../vendiaClient';\nimport { Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SummaryModal = ({\n  deviceId,\n  onHide\n}) => {\n  _s();\n  const {\n    client\n  } = vendiaClient();\n  const [completedTests, setCompletedTests] = useState([]);\n  const [incompleteTests, setIncompleteTests] = useState([]);\n  useEffect(() => {\n    const fetchTestsForDevice = async () => {\n      try {\n        // Fetch tests associated with the device\n        const testsResponse = await client.entities.test.list();\n        console.log(testsResponse);\n        const deviceTests = testsResponse.items.filter(test => test.Device === deviceId);\n        console.log(testsResponse);\n\n        // Separate completed and incomplete tests\n        const completed = deviceTests.filter(test => test.Completed);\n        const incomplete = deviceTests.filter(test => !test.Completed);\n        setCompletedTests(completed);\n        setIncompleteTests(incomplete);\n      } catch (error) {\n        console.error('Error fetching tests for device:', error);\n      }\n    };\n    fetchTestsForDevice();\n  }, [client, deviceId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: onHide,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tests Completed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), \" \", completedTests.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tests Incompleted:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), \" \", incompleteTests.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(SummaryModal, \"EQCVrDpweIpBV0SaSMLWG6xFkKc=\");\n_c = SummaryModal;\nexport default SummaryModal;\nvar _c;\n$RefreshReg$(_c, \"SummaryModal\");","map":{"version":3,"names":["React","useState","useEffect","vendiaClient","Modal","Button","jsxDEV","_jsxDEV","SummaryModal","deviceId","onHide","_s","client","completedTests","setCompletedTests","incompleteTests","setIncompleteTests","fetchTestsForDevice","testsResponse","entities","test","list","console","log","deviceTests","items","filter","Device","completed","Completed","incomplete","error","show","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","length","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/src/Routes/SummaryModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { vendiaClient } from '../vendiaClient';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst SummaryModal = ({ deviceId, onHide }) => {\r\n    const { client } = vendiaClient();\r\n    const [completedTests, setCompletedTests] = useState([]);\r\n    const [incompleteTests, setIncompleteTests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTestsForDevice = async () => {\r\n            try {\r\n                // Fetch tests associated with the device\r\n                const testsResponse = await client.entities.test.list();\r\n                console.log(testsResponse);\r\n                const deviceTests = testsResponse.items.filter((test) => test.Device === deviceId);\r\n                console.log(testsResponse);\r\n\r\n                // Separate completed and incomplete tests\r\n                const completed = deviceTests.filter((test) => test.Completed);\r\n                const incomplete = deviceTests.filter((test) => !test.Completed);\r\n\r\n                setCompletedTests(completed);\r\n                setIncompleteTests(incomplete);\r\n            } catch (error) {\r\n                console.error('Error fetching tests for device:', error);\r\n            }\r\n        };\r\n\r\n        fetchTestsForDevice();\r\n    }, [client, deviceId]);\r\n\r\n    return (\r\n        <Modal show={true} onHide={onHide}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Summary</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <p>\r\n                        <strong>Tests Completed:</strong> {completedTests.length}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Tests Incompleted:</strong> {incompleteTests.length}\r\n                    </p>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={onHide}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SummaryModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}