{"ast":null,"code":"'use strict';\n\nvar defaultIsExtractableFile = require('./isExtractableFile');\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\n  if (path === void 0) {\n    path = '';\n  }\n  if (isExtractableFile === void 0) {\n    isExtractableFile = defaultIsExtractableFile;\n  }\n  var clone;\n  var files = new Map();\n  function addFile(paths, file) {\n    var storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);else files.set(file, paths);\n  }\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    var prefix = path ? path + '.' : '';\n    if (typeof FileList !== 'undefined' && value instanceof FileList) clone = Array.prototype.map.call(value, function (file, i) {\n      addFile(['' + prefix + i], file);\n      return null;\n    });else if (Array.isArray(value)) clone = value.map(function (child, i) {\n      var result = extractFiles(child, '' + prefix + i, isExtractableFile);\n      result.files.forEach(addFile);\n      return result.clone;\n    });else if (value && value.constructor === Object) {\n      clone = {};\n      for (var i in value) {\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n  return {\n    clone: clone,\n    files: files\n  };\n};","map":{"version":3,"names":["defaultIsExtractableFile","require","module","exports","extractFiles","value","path","isExtractableFile","clone","files","Map","addFile","paths","file","storedPaths","get","push","apply","set","prefix","FileList","Array","prototype","map","call","i","isArray","child","result","forEach","constructor","Object"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainProject/BeamTeamCSC131/node_modules/extract-files/public/extractFiles.js"],"sourcesContent":["'use strict';\r\n\r\nvar defaultIsExtractableFile = require('./isExtractableFile');\r\n\r\nmodule.exports = function extractFiles(value, path, isExtractableFile) {\r\n  if (path === void 0) {\r\n    path = '';\r\n  }\r\n\r\n  if (isExtractableFile === void 0) {\r\n    isExtractableFile = defaultIsExtractableFile;\r\n  }\r\n\r\n  var clone;\r\n  var files = new Map();\r\n\r\n  function addFile(paths, file) {\r\n    var storedPaths = files.get(file);\r\n    if (storedPaths) storedPaths.push.apply(storedPaths, paths);\r\n    else files.set(file, paths);\r\n  }\r\n\r\n  if (isExtractableFile(value)) {\r\n    clone = null;\r\n    addFile([path], value);\r\n  } else {\r\n    var prefix = path ? path + '.' : '';\r\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\r\n      clone = Array.prototype.map.call(value, function (file, i) {\r\n        addFile(['' + prefix + i], file);\r\n        return null;\r\n      });\r\n    else if (Array.isArray(value))\r\n      clone = value.map(function (child, i) {\r\n        var result = extractFiles(child, '' + prefix + i, isExtractableFile);\r\n        result.files.forEach(addFile);\r\n        return result.clone;\r\n      });\r\n    else if (value && value.constructor === Object) {\r\n      clone = {};\r\n\r\n      for (var i in value) {\r\n        var result = extractFiles(value[i], '' + prefix + i, isExtractableFile);\r\n        result.files.forEach(addFile);\r\n        clone[i] = result.clone;\r\n      }\r\n    } else clone = value;\r\n  }\r\n\r\n  return {\r\n    clone: clone,\r\n    files: files,\r\n  };\r\n};\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,wBAAwB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAE7DC,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAACC,KAAK,EAAEC,IAAI,EAAEC,iBAAiB,EAAE;EACrE,IAAID,IAAI,KAAK,KAAK,CAAC,EAAE;IACnBA,IAAI,GAAG,EAAE;EACX;EAEA,IAAIC,iBAAiB,KAAK,KAAK,CAAC,EAAE;IAChCA,iBAAiB,GAAGP,wBAAwB;EAC9C;EAEA,IAAIQ,KAAK;EACT,IAAIC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EAErB,SAASC,OAAOA,CAACC,KAAK,EAAEC,IAAI,EAAE;IAC5B,IAAIC,WAAW,GAAGL,KAAK,CAACM,GAAG,CAACF,IAAI,CAAC;IACjC,IAAIC,WAAW,EAAEA,WAAW,CAACE,IAAI,CAACC,KAAK,CAACH,WAAW,EAAEF,KAAK,CAAC,CAAC,KACvDH,KAAK,CAACS,GAAG,CAACL,IAAI,EAAED,KAAK,CAAC;EAC7B;EAEA,IAAIL,iBAAiB,CAACF,KAAK,CAAC,EAAE;IAC5BG,KAAK,GAAG,IAAI;IACZG,OAAO,CAAC,CAACL,IAAI,CAAC,EAAED,KAAK,CAAC;EACxB,CAAC,MAAM;IACL,IAAIc,MAAM,GAAGb,IAAI,GAAGA,IAAI,GAAG,GAAG,GAAG,EAAE;IACnC,IAAI,OAAOc,QAAQ,KAAK,WAAW,IAAIf,KAAK,YAAYe,QAAQ,EAC9DZ,KAAK,GAAGa,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,IAAI,CAACnB,KAAK,EAAE,UAAUQ,IAAI,EAAEY,CAAC,EAAE;MACzDd,OAAO,CAAC,CAAC,EAAE,GAAGQ,MAAM,GAAGM,CAAC,CAAC,EAAEZ,IAAI,CAAC;MAChC,OAAO,IAAI;IACb,CAAC,CAAC,CAAC,KACA,IAAIQ,KAAK,CAACK,OAAO,CAACrB,KAAK,CAAC,EAC3BG,KAAK,GAAGH,KAAK,CAACkB,GAAG,CAAC,UAAUI,KAAK,EAAEF,CAAC,EAAE;MACpC,IAAIG,MAAM,GAAGxB,YAAY,CAACuB,KAAK,EAAE,EAAE,GAAGR,MAAM,GAAGM,CAAC,EAAElB,iBAAiB,CAAC;MACpEqB,MAAM,CAACnB,KAAK,CAACoB,OAAO,CAAClB,OAAO,CAAC;MAC7B,OAAOiB,MAAM,CAACpB,KAAK;IACrB,CAAC,CAAC,CAAC,KACA,IAAIH,KAAK,IAAIA,KAAK,CAACyB,WAAW,KAAKC,MAAM,EAAE;MAC9CvB,KAAK,GAAG,CAAC,CAAC;MAEV,KAAK,IAAIiB,CAAC,IAAIpB,KAAK,EAAE;QACnB,IAAIuB,MAAM,GAAGxB,YAAY,CAACC,KAAK,CAACoB,CAAC,CAAC,EAAE,EAAE,GAAGN,MAAM,GAAGM,CAAC,EAAElB,iBAAiB,CAAC;QACvEqB,MAAM,CAACnB,KAAK,CAACoB,OAAO,CAAClB,OAAO,CAAC;QAC7BH,KAAK,CAACiB,CAAC,CAAC,GAAGG,MAAM,CAACpB,KAAK;MACzB;IACF,CAAC,MAAMA,KAAK,GAAGH,KAAK;EACtB;EAEA,OAAO;IACLG,KAAK,EAAEA,KAAK;IACZC,KAAK,EAAEA;EACT,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}