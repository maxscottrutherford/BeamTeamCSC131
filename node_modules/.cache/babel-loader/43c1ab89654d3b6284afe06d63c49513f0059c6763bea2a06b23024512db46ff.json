{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mabur\\\\Desktop\\\\College\\\\SacState\\\\CSC131\\\\MainRepo6\\\\BeamTeamCSC131\\\\src\\\\Routes\\\\DeviceListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { vendiaClient } from '../vendiaClient';\nimport { Table, Button, Modal, Form } from 'react-bootstrap';\nimport { Context } from '../Context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableDesign = () => {\n  _s();\n  const {\n    client\n  } = vendiaClient();\n  const {\n    user\n  } = useContext(Context);\n  const [testData, setTestData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [editRowIndex, setEditRowIndex] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  const [devices, setDevices] = useState([]);\n  const [selectedDevices, setSelectedDevices] = useState([]);\n  useEffect(() => {\n    const fetchDataFromTable = async () => {\n      try {\n        const response = await client.entities.test.list({\n          readMode: \"NODE_LEDGERED\"\n        });\n        setTestData(response.items);\n        setFilteredData(response.items); // Initialize filteredData with all data\n      } catch (error) {\n        console.error('Error fetching data from table:', error);\n      }\n    };\n    fetchDataFromTable();\n  }, []);\n  useEffect(() => {\n    // Update filteredData whenever testData changes\n    setFilteredData(testData);\n  }, [testData]);\n  useEffect(() => {\n    // Fetch devices from the vendia API\n    const fetchDevices = async () => {\n      try {\n        const response = await client.entities.device.list({\n          readMode: \"NODE_LEDGERED\"\n        });\n        setDevices(response.items);\n      } catch (error) {\n        console.error('Error fetching devices from Vendia:', error);\n      }\n    };\n    fetchDevices();\n  }, []);\n  const handleSearch = e => {\n    const searchText = e.target.value.toLowerCase();\n    setSearchTerm(searchText);\n\n    // Filter data based on search term and selected devices\n    const filteredResults = testData.filter(item => Object.values(item).some(value => value && typeof value === 'string' && value.toLowerCase().includes(searchText)));\n\n    // Apply device filter\n    if (selectedDevices.length > 0) {\n      setFilteredData(filteredResults.filter(item => selectedDevices.includes(item.Device)));\n    } else {\n      setFilteredData(filteredResults);\n    }\n  };\n  const handleEdit = index => {\n    setShowModal(true);\n    setEditedData(filteredData[index]);\n    setEditRowIndex(index);\n  };\n  const handleSave = async () => {\n    const {\n      _owner,\n      _acl,\n      ...updatedData\n    } = editedData;\n    const updatedTestData = [...testData];\n    updatedTestData[editRowIndex] = updatedData;\n    setTestData(updatedTestData);\n    try {\n      await client.entities.test.update(updatedData);\n      const response = await client.entities.test.get(updatedData._id);\n      const updatedTestDataAfterSave = updatedTestData.map(item => item._id === response._id ? response : item);\n      setTestData(updatedTestDataAfterSave);\n      setShowModal(false);\n    } catch (error) {\n      console.error('Error updating data in Vendia:', error);\n    }\n  };\n  const handleDelete = async index => {\n    const updatedTestData = [...testData];\n    const deletedItem = updatedTestData.splice(index, 1)[0];\n    setTestData(updatedTestData);\n    try {\n      await client.entities.test.remove(deletedItem._id);\n    } catch (error) {\n      console.error('Error deleting data in Vendia:', error);\n    }\n  };\n  const handleDeviceChange = deviceName => {\n    const updatedDevices = [...selectedDevices];\n    const index = updatedDevices.indexOf(deviceName);\n    if (index !== -1) {\n      // Device is already selected, remove it\n      updatedDevices.splice(index, 1);\n    } else {\n      // Device is not selected, add it\n      updatedDevices.push(deviceName);\n    }\n    setSelectedDevices(updatedDevices);\n\n    // Filter data based on search term and selected devices\n    const filteredResults = testData.filter(item => Object.values(item).some(value => value && typeof value === 'string' && value.toLowerCase().includes(searchTerm)));\n\n    // Apply device filter\n    if (updatedDevices.length > 0) {\n      setFilteredData(filteredResults.filter(item => updatedDevices.includes(item.Device)));\n    } else {\n      setFilteredData(filteredResults);\n    }\n  };\n  const isAdmin = user && user.email.includes('admin');\n  const userOrg = user ? user.email.split('@')[1] : '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Device Tests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-8\",\n        style: {\n          width: '100%',\n          margin: '0 auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"searchTerm\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Search by Name\",\n              value: searchTerm,\n              onChange: handleSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: devices.map((device, index) => /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            label: device.DeviceName,\n            checked: selectedDevices.includes(device.DeviceName),\n            onChange: () => handleDeviceChange(device.DeviceName),\n            inline: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          responsive: true,\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Org Assignment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Method\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Updated By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Device\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.TestID\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.OrgAssignment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.TestName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.TestMethod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.Notes\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.Completed ? 'Completed' : 'Not Completed'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.UpdatedBy\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.Device\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => handleEdit(index),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: () => handleDelete(index),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: editedData.TestID,\n            onChange: e => setEditedData({\n              ...editedData,\n              TestID: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Org Assignment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: editedData.OrgAssignment,\n            onChange: e => setEditedData({\n              ...editedData,\n              OrgAssignment: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: editedData.TestName,\n            onChange: e => setEditedData({\n              ...editedData,\n              TestName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: editedData.TestMethod,\n            onChange: e => setEditedData({\n              ...editedData,\n              TestMethod: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Notes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: editedData.Notes,\n            onChange: e => setEditedData({\n              ...editedData,\n              Notes: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: editedData.Completed,\n            onChange: e => setEditedData({\n              ...editedData,\n              Completed: e.target.checked\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Updated By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: editedData.UpdatedBy,\n            onChange: e => setEditedData({\n              ...editedData,\n              UpdatedBy: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSave,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(TableDesign, \"S+jm8XQNWAhUmjO2SsjyXcYMwbI=\");\n_c = TableDesign;\nexport default TableDesign;\nvar _c;\n$RefreshReg$(_c, \"TableDesign\");","map":{"version":3,"names":["React","useState","useEffect","useContext","vendiaClient","Table","Button","Modal","Form","Context","jsxDEV","_jsxDEV","TableDesign","_s","client","user","testData","setTestData","filteredData","setFilteredData","searchTerm","setSearchTerm","showModal","setShowModal","editRowIndex","setEditRowIndex","editedData","setEditedData","devices","setDevices","selectedDevices","setSelectedDevices","fetchDataFromTable","response","entities","test","list","readMode","items","error","console","fetchDevices","device","handleSearch","e","searchText","target","value","toLowerCase","filteredResults","filter","item","Object","values","some","includes","length","Device","handleEdit","index","handleSave","_owner","_acl","updatedData","updatedTestData","update","get","_id","updatedTestDataAfterSave","map","handleDelete","deletedItem","splice","remove","handleDeviceChange","deviceName","updatedDevices","indexOf","push","isAdmin","email","userOrg","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","Group","controlId","Control","type","placeholder","onChange","Check","label","DeviceName","checked","inline","responsive","striped","bordered","hover","row","TestID","OrgAssignment","TestName","TestMethod","Notes","Completed","UpdatedBy","Fragment","variant","onClick","show","onHide","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/src/Routes/DeviceListPage.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { vendiaClient } from '../vendiaClient';\r\nimport { Table, Button, Modal, Form } from 'react-bootstrap';\r\nimport { Context } from '../Context/AuthContext';\r\n\r\nconst TableDesign = () => {\r\n    const { client } = vendiaClient();\r\n    const { user } = useContext(Context);\r\n    const [testData, setTestData] = useState([]);\r\n    const [filteredData, setFilteredData] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [editRowIndex, setEditRowIndex] = useState(null);\r\n    const [editedData, setEditedData] = useState({});\r\n    const [devices, setDevices] = useState([]);\r\n    const [selectedDevices, setSelectedDevices] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchDataFromTable = async () => {\r\n            try {\r\n                const response = await client.entities.test.list({ readMode: \"NODE_LEDGERED\" });\r\n                setTestData(response.items);\r\n                setFilteredData(response.items); // Initialize filteredData with all data\r\n            } catch (error) {\r\n                console.error('Error fetching data from table:', error);\r\n            }\r\n        };\r\n\r\n        fetchDataFromTable();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Update filteredData whenever testData changes\r\n        setFilteredData(testData);\r\n    }, [testData]);\r\n\r\n    useEffect(() => {\r\n        // Fetch devices from the vendia API\r\n        const fetchDevices = async () => {\r\n            try {\r\n                const response = await client.entities.device.list({ readMode: \"NODE_LEDGERED\" });\r\n                setDevices(response.items);\r\n            } catch (error) {\r\n                console.error('Error fetching devices from Vendia:', error);\r\n            }\r\n        };\r\n\r\n        fetchDevices();\r\n    }, []);\r\n\r\n    const handleSearch = (e) => {\r\n        const searchText = e.target.value.toLowerCase();\r\n        setSearchTerm(searchText);\r\n\r\n        // Filter data based on search term and selected devices\r\n        const filteredResults = testData.filter((item) =>\r\n            Object.values(item).some(\r\n                (value) =>\r\n                    value &&\r\n                    typeof value === 'string' &&\r\n                    value.toLowerCase().includes(searchText)\r\n            )\r\n        );\r\n\r\n        // Apply device filter\r\n        if (selectedDevices.length > 0) {\r\n            setFilteredData(filteredResults.filter((item) =>\r\n                selectedDevices.includes(item.Device)\r\n            ));\r\n        } else {\r\n            setFilteredData(filteredResults);\r\n        }\r\n    };\r\n\r\n    const handleEdit = (index) => {\r\n        setShowModal(true);\r\n        setEditedData(filteredData[index]);\r\n        setEditRowIndex(index);\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        const { _owner, _acl, ...updatedData } = editedData;\r\n        const updatedTestData = [...testData];\r\n        updatedTestData[editRowIndex] = updatedData;\r\n        setTestData(updatedTestData);\r\n\r\n        try {\r\n            await client.entities.test.update(updatedData);\r\n            const response = await client.entities.test.get(updatedData._id);\r\n            const updatedTestDataAfterSave = updatedTestData.map((item) =>\r\n                item._id === response._id ? response : item\r\n            );\r\n            setTestData(updatedTestDataAfterSave);\r\n            setShowModal(false);\r\n        } catch (error) {\r\n            console.error('Error updating data in Vendia:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index) => {\r\n        const updatedTestData = [...testData];\r\n        const deletedItem = updatedTestData.splice(index, 1)[0];\r\n        setTestData(updatedTestData);\r\n\r\n        try {\r\n            await client.entities.test.remove(deletedItem._id);\r\n        } catch (error) {\r\n            console.error('Error deleting data in Vendia:', error);\r\n        }\r\n    };\r\n\r\n    const handleDeviceChange = (deviceName) => {\r\n        const updatedDevices = [...selectedDevices];\r\n        const index = updatedDevices.indexOf(deviceName);\r\n\r\n        if (index !== -1) {\r\n            // Device is already selected, remove it\r\n            updatedDevices.splice(index, 1);\r\n        } else {\r\n            // Device is not selected, add it\r\n            updatedDevices.push(deviceName);\r\n        }\r\n\r\n        setSelectedDevices(updatedDevices);\r\n\r\n        // Filter data based on search term and selected devices\r\n        const filteredResults = testData.filter((item) =>\r\n            Object.values(item).some(\r\n                (value) =>\r\n                    value &&\r\n                    typeof value === 'string' &&\r\n                    value.toLowerCase().includes(searchTerm)\r\n            )\r\n        );\r\n\r\n        // Apply device filter\r\n        if (updatedDevices.length > 0) {\r\n            setFilteredData(filteredResults.filter((item) =>\r\n                updatedDevices.includes(item.Device)\r\n            ));\r\n        } else {\r\n            setFilteredData(filteredResults);\r\n        }\r\n    };\r\n\r\n    const isAdmin = user && user.email.includes('admin');\r\n    const userOrg = user ? user.email.split('@')[1] : '';\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mb-3\">\r\n                    <h1 className=\"text-center\">Device Tests</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-8\" style={{ width: '100%', margin: '0 auto' }}>\r\n                    <Form>\r\n                        <Form.Group controlId=\"searchTerm\">\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Search by Name\"\r\n                                value={searchTerm}\r\n                                onChange={handleSearch}\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <div className=\"mb-3\">\r\n                        {devices.map((device, index) => (\r\n                            <Form.Check\r\n                                key={index}\r\n                                type=\"checkbox\"\r\n                                label={device.DeviceName}\r\n                                checked={selectedDevices.includes(device.DeviceName)}\r\n                                onChange={() => handleDeviceChange(device.DeviceName)}\r\n                                inline\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                    <Table responsive striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Org Assignment</th>\r\n                                <th>Name</th>\r\n                                <th>Method</th>\r\n                                <th>Notes</th>\r\n                                <th>Completed</th>\r\n                                <th>Updated By</th>\r\n                                <th>Device</th>\r\n                                {isAdmin && <th>Actions</th>}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredData.map((row, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{row.TestID}</td>\r\n                                    <td>{row.OrgAssignment}</td>\r\n                                    <td>{row.TestName}</td>\r\n                                    <td>{row.TestMethod}</td>\r\n                                    <td>{row.Notes}</td>\r\n                                    <td>{row.Completed ? 'Completed' : 'Not Completed'}</td>\r\n                                    <td>{row.UpdatedBy}</td>\r\n                                    <td>{row.Device}</td>\r\n                                    {isAdmin && (\r\n                                        <React.Fragment>\r\n                                            <td>\r\n                                                <Button variant=\"primary\" onClick={() => handleEdit(index)}>\r\n                                                    Update\r\n                                                </Button>\r\n                                            </td>\r\n                                            <td>\r\n                                                <Button variant=\"danger\" onClick={() => handleDelete(index)}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                            </td>\r\n                                        </React.Fragment>\r\n                                    )}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Edit Data</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"form-group\">\r\n                        <label>ID</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.TestID}\r\n                            onChange={(e) => setEditedData({ ...editedData, TestID: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Org Assignment</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.OrgAssignment}\r\n                            onChange={(e) => setEditedData({ ...editedData, OrgAssignment: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.TestName}\r\n                            onChange={(e) => setEditedData({ ...editedData, TestName: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Method</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.TestMethod}\r\n                            onChange={(e) => setEditedData({ ...editedData, TestMethod: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Notes</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.Notes}\r\n                            onChange={(e) => setEditedData({ ...editedData, Notes: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Completed</label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={editedData.Completed}\r\n                            onChange={(e) => setEditedData({ ...editedData, Completed: e.target.checked })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Updated By</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            value={editedData.UpdatedBy}\r\n                            onChange={(e) => setEditedData({ ...editedData, UpdatedBy: e.target.value })}\r\n                        />\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleSave}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableDesign;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}