{"ast":null,"code":"import debug from 'debug';\nimport { createCoreClient } from './create-core-client';\nimport { createSubscriptionClient } from './create-subscription-client';\nimport { getBlocks, getContracts, getDeployments, getEntities, getFiles, getFolders, getSettings, getUniInfo, getSharingPolicies\n// @ts-ignore - this import statement will always be broken prior to codegen\n} from './generated';\nexport const createVendiaClient = options => {\n  const _logger = debug('@vendia/client');\n  if (options.debug) {\n    _logger('Debug enabled via options');\n    debug.enable('@vendia/client');\n  }\n  const {\n    _subscribe\n  } = createSubscriptionClient(options, {\n    _logger\n  });\n  const {\n    _gqlClient,\n    _requestWrapper,\n    request\n  } = createCoreClient(options, {\n    _logger\n  });\n  const getSdkOptions = {\n    _gqlClient,\n    _requestWrapper,\n    _subscribe\n  };\n  const blocks = getBlocks(getSdkOptions);\n  const contracts = getContracts(getSdkOptions);\n  const deployments = getDeployments(getSdkOptions);\n  const entities = getEntities(getSdkOptions);\n  const uniInfo = getUniInfo(getSdkOptions);\n  const settings = getSettings(getSdkOptions);\n  const folders = getFolders(getSdkOptions);\n  const files = getFiles(getSdkOptions);\n  const sharingPolicies = getSharingPolicies(getSdkOptions);\n  const storage = {\n    files,\n    folders\n  };\n  return {\n    request,\n    deployments,\n    blocks,\n    storage,\n    contracts,\n    uniInfo,\n    settings,\n    entities,\n    sharingPolicies\n  };\n};","map":{"version":3,"names":["debug","createCoreClient","createSubscriptionClient","getBlocks","getContracts","getDeployments","getEntities","getFiles","getFolders","getSettings","getUniInfo","getSharingPolicies","createVendiaClient","options","_logger","enable","_subscribe","_gqlClient","_requestWrapper","request","getSdkOptions","blocks","contracts","deployments","entities","uniInfo","settings","folders","files","sharingPolicies","storage"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/node_modules/.vendia-client/esm/index.js"],"sourcesContent":["import debug from 'debug';\r\nimport { createCoreClient } from './create-core-client';\r\nimport { createSubscriptionClient } from './create-subscription-client';\r\nimport { getBlocks, getContracts, getDeployments, getEntities, getFiles, getFolders, getSettings, getUniInfo, getSharingPolicies,\r\n// @ts-ignore - this import statement will always be broken prior to codegen\r\n } from './generated';\r\nexport const createVendiaClient = (options) => {\r\n    const _logger = debug('@vendia/client');\r\n    if (options.debug) {\r\n        _logger('Debug enabled via options');\r\n        debug.enable('@vendia/client');\r\n    }\r\n    const { _subscribe } = createSubscriptionClient(options, { _logger });\r\n    const { _gqlClient, _requestWrapper, request } = createCoreClient(options, { _logger });\r\n    const getSdkOptions = { _gqlClient, _requestWrapper, _subscribe };\r\n    const blocks = getBlocks(getSdkOptions);\r\n    const contracts = getContracts(getSdkOptions);\r\n    const deployments = getDeployments(getSdkOptions);\r\n    const entities = getEntities(getSdkOptions);\r\n    const uniInfo = getUniInfo(getSdkOptions);\r\n    const settings = getSettings(getSdkOptions);\r\n    const folders = getFolders(getSdkOptions);\r\n    const files = getFiles(getSdkOptions);\r\n    const sharingPolicies = getSharingPolicies(getSdkOptions);\r\n    const storage = {\r\n        files,\r\n        folders,\r\n    };\r\n    return {\r\n        request,\r\n        deployments,\r\n        blocks,\r\n        storage,\r\n        contracts,\r\n        uniInfo,\r\n        settings,\r\n        entities,\r\n        sharingPolicies,\r\n    };\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,wBAAwB,QAAQ,8BAA8B;AACvE,SAASC,SAAS,EAAEC,YAAY,EAAEC,cAAc,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC;AAC9G;AAAA,OACQ,aAAa;AACrB,OAAO,MAAMC,kBAAkB,GAAIC,OAAO,IAAK;EAC3C,MAAMC,OAAO,GAAGd,KAAK,CAAC,gBAAgB,CAAC;EACvC,IAAIa,OAAO,CAACb,KAAK,EAAE;IACfc,OAAO,CAAC,2BAA2B,CAAC;IACpCd,KAAK,CAACe,MAAM,CAAC,gBAAgB,CAAC;EAClC;EACA,MAAM;IAAEC;EAAW,CAAC,GAAGd,wBAAwB,CAACW,OAAO,EAAE;IAAEC;EAAQ,CAAC,CAAC;EACrE,MAAM;IAAEG,UAAU;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGlB,gBAAgB,CAACY,OAAO,EAAE;IAAEC;EAAQ,CAAC,CAAC;EACvF,MAAMM,aAAa,GAAG;IAAEH,UAAU;IAAEC,eAAe;IAAEF;EAAW,CAAC;EACjE,MAAMK,MAAM,GAAGlB,SAAS,CAACiB,aAAa,CAAC;EACvC,MAAME,SAAS,GAAGlB,YAAY,CAACgB,aAAa,CAAC;EAC7C,MAAMG,WAAW,GAAGlB,cAAc,CAACe,aAAa,CAAC;EACjD,MAAMI,QAAQ,GAAGlB,WAAW,CAACc,aAAa,CAAC;EAC3C,MAAMK,OAAO,GAAGf,UAAU,CAACU,aAAa,CAAC;EACzC,MAAMM,QAAQ,GAAGjB,WAAW,CAACW,aAAa,CAAC;EAC3C,MAAMO,OAAO,GAAGnB,UAAU,CAACY,aAAa,CAAC;EACzC,MAAMQ,KAAK,GAAGrB,QAAQ,CAACa,aAAa,CAAC;EACrC,MAAMS,eAAe,GAAGlB,kBAAkB,CAACS,aAAa,CAAC;EACzD,MAAMU,OAAO,GAAG;IACZF,KAAK;IACLD;EACJ,CAAC;EACD,OAAO;IACHR,OAAO;IACPI,WAAW;IACXF,MAAM;IACNS,OAAO;IACPR,SAAS;IACTG,OAAO;IACPC,QAAQ;IACRF,QAAQ;IACRK;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}