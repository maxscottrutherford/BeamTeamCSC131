{"ast":null,"code":"/** @private */\nexport function extendedTypeof(val) {\n  if (val === null) {\n    return 'null';\n  }\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n  return typeof val;\n}\n/** @private */\nexport function isObject(val) {\n  return extendedTypeof(val) === 'object';\n}\n/** @private */\nexport function isAsyncIterable(val) {\n  return typeof Object(val)[Symbol.asyncIterator] === 'function';\n}\n/** @private */\nexport function isAsyncGenerator(val) {\n  return isObject(val) && typeof Object(val)[Symbol.asyncIterator] === 'function' && typeof val.return === 'function'\n  // for lazy ones, we only need the return anyway\n  // typeof val.throw === 'function' &&\n  // typeof val.next === 'function'\n  ;\n}\n/** @private */\nexport function areGraphQLErrors(obj) {\n  return Array.isArray(obj) &&\n  // must be at least one error\n  obj.length > 0 &&\n  // error has at least a message\n  obj.every(ob => 'message' in ob);\n}\n/**\n * Limits the WebSocket close event reason to not exceed a length of one frame.\n * Reference: https://datatracker.ietf.org/doc/html/rfc6455#section-5.2.\n *\n * @private\n */\nexport function limitCloseReason(reason, whenTooLong) {\n  return reason.length < 124 ? reason : whenTooLong;\n}","map":{"version":3,"names":["extendedTypeof","val","Array","isArray","isObject","isAsyncIterable","Object","Symbol","asyncIterator","isAsyncGenerator","return","areGraphQLErrors","obj","length","every","ob","limitCloseReason","reason","whenTooLong"],"sources":["/Users/maxrutherford/Desktop/SacState/FA23/CSC131/beamteam-csc131/node_modules/graphql-ws/lib/utils.mjs"],"sourcesContent":["/** @private */\nexport function extendedTypeof(val) {\n    if (val === null) {\n        return 'null';\n    }\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n    return typeof val;\n}\n/** @private */\nexport function isObject(val) {\n    return extendedTypeof(val) === 'object';\n}\n/** @private */\nexport function isAsyncIterable(val) {\n    return typeof Object(val)[Symbol.asyncIterator] === 'function';\n}\n/** @private */\nexport function isAsyncGenerator(val) {\n    return (isObject(val) &&\n        typeof Object(val)[Symbol.asyncIterator] === 'function' &&\n        typeof val.return === 'function'\n    // for lazy ones, we only need the return anyway\n    // typeof val.throw === 'function' &&\n    // typeof val.next === 'function'\n    );\n}\n/** @private */\nexport function areGraphQLErrors(obj) {\n    return (Array.isArray(obj) &&\n        // must be at least one error\n        obj.length > 0 &&\n        // error has at least a message\n        obj.every((ob) => 'message' in ob));\n}\n/**\n * Limits the WebSocket close event reason to not exceed a length of one frame.\n * Reference: https://datatracker.ietf.org/doc/html/rfc6455#section-5.2.\n *\n * @private\n */\nexport function limitCloseReason(reason, whenTooLong) {\n    return reason.length < 124 ? reason : whenTooLong;\n}\n"],"mappings":"AAAA;AACA,OAAO,SAASA,cAAcA,CAACC,GAAG,EAAE;EAChC,IAAIA,GAAG,KAAK,IAAI,EAAE;IACd,OAAO,MAAM;EACjB;EACA,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;IACpB,OAAO,OAAO;EAClB;EACA,OAAO,OAAOA,GAAG;AACrB;AACA;AACA,OAAO,SAASG,QAAQA,CAACH,GAAG,EAAE;EAC1B,OAAOD,cAAc,CAACC,GAAG,CAAC,KAAK,QAAQ;AAC3C;AACA;AACA,OAAO,SAASI,eAAeA,CAACJ,GAAG,EAAE;EACjC,OAAO,OAAOK,MAAM,CAACL,GAAG,CAAC,CAACM,MAAM,CAACC,aAAa,CAAC,KAAK,UAAU;AAClE;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACR,GAAG,EAAE;EAClC,OAAQG,QAAQ,CAACH,GAAG,CAAC,IACjB,OAAOK,MAAM,CAACL,GAAG,CAAC,CAACM,MAAM,CAACC,aAAa,CAAC,KAAK,UAAU,IACvD,OAAOP,GAAG,CAACS,MAAM,KAAK;EAC1B;EACA;EACA;EAAA;AAEJ;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,GAAG,EAAE;EAClC,OAAQV,KAAK,CAACC,OAAO,CAACS,GAAG,CAAC;EACtB;EACAA,GAAG,CAACC,MAAM,GAAG,CAAC;EACd;EACAD,GAAG,CAACE,KAAK,CAAEC,EAAE,IAAK,SAAS,IAAIA,EAAE,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,WAAW,EAAE;EAClD,OAAOD,MAAM,CAACJ,MAAM,GAAG,GAAG,GAAGI,MAAM,GAAGC,WAAW;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}