{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\r\n * Unique variable names\r\n *\r\n * A GraphQL operation is only valid if all its variables are uniquely named.\r\n */\nexport function UniqueVariableNamesRule(context) {\n  var knownVariableNames = Object.create(null);\n  return {\n    OperationDefinition: function OperationDefinition() {\n      knownVariableNames = Object.create(null);\n    },\n    VariableDefinition: function VariableDefinition(node) {\n      var variableName = node.variable.name.value;\n      if (knownVariableNames[variableName]) {\n        context.reportError(new GraphQLError(\"There can be only one variable named \\\"$\".concat(variableName, \"\\\".\"), [knownVariableNames[variableName], node.variable.name]));\n      } else {\n        knownVariableNames[variableName] = node.variable.name;\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueVariableNamesRule","context","knownVariableNames","Object","create","OperationDefinition","VariableDefinition","node","variableName","variable","name","value","reportError","concat"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainProject/BeamTeamCSC131/node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\r\n\r\n/**\r\n * Unique variable names\r\n *\r\n * A GraphQL operation is only valid if all its variables are uniquely named.\r\n */\r\nexport function UniqueVariableNamesRule(context) {\r\n  var knownVariableNames = Object.create(null);\r\n  return {\r\n    OperationDefinition: function OperationDefinition() {\r\n      knownVariableNames = Object.create(null);\r\n    },\r\n    VariableDefinition: function VariableDefinition(node) {\r\n      var variableName = node.variable.name.value;\r\n\r\n      if (knownVariableNames[variableName]) {\r\n        context.reportError(new GraphQLError(\"There can be only one variable named \\\"$\".concat(variableName, \"\\\".\"), [knownVariableNames[variableName], node.variable.name]));\r\n      } else {\r\n        knownVariableNames[variableName] = node.variable.name;\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,uBAAuBA,CAACC,OAAO,EAAE;EAC/C,IAAIC,kBAAkB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAC5C,OAAO;IACLC,mBAAmB,EAAE,SAASA,mBAAmBA,CAAA,EAAG;MAClDH,kBAAkB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC1C,CAAC;IACDE,kBAAkB,EAAE,SAASA,kBAAkBA,CAACC,IAAI,EAAE;MACpD,IAAIC,YAAY,GAAGD,IAAI,CAACE,QAAQ,CAACC,IAAI,CAACC,KAAK;MAE3C,IAAIT,kBAAkB,CAACM,YAAY,CAAC,EAAE;QACpCP,OAAO,CAACW,WAAW,CAAC,IAAIb,YAAY,CAAC,0CAA0C,CAACc,MAAM,CAACL,YAAY,EAAE,KAAK,CAAC,EAAE,CAACN,kBAAkB,CAACM,YAAY,CAAC,EAAED,IAAI,CAACE,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;MACvK,CAAC,MAAM;QACLR,kBAAkB,CAACM,YAAY,CAAC,GAAGD,IAAI,CAACE,QAAQ,CAACC,IAAI;MACvD;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}