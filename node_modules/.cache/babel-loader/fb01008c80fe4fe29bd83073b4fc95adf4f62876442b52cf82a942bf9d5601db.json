{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\r\n * No unused variables\r\n *\r\n * A GraphQL operation is only valid if all variables defined by an operation\r\n * are used, either directly or within a spread fragment.\r\n */\nexport function NoUnusedVariablesRule(context) {\n  var variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter: function enter() {\n        variableDefs = [];\n      },\n      leave: function leave(operation) {\n        var variableNameUsed = Object.create(null);\n        var usages = context.getRecursiveVariableUsages(operation);\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\n          var _ref2 = usages[_i2];\n          var node = _ref2.node;\n          variableNameUsed[node.name.value] = true;\n        }\n        for (var _i4 = 0, _variableDefs2 = variableDefs; _i4 < _variableDefs2.length; _i4++) {\n          var variableDef = _variableDefs2[_i4];\n          var variableName = variableDef.variable.name.value;\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(variableName, \"\\\" is never used in operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(variableName, \"\\\" is never used.\"), variableDef));\n          }\n        }\n      }\n    },\n    VariableDefinition: function VariableDefinition(def) {\n      variableDefs.push(def);\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","NoUnusedVariablesRule","context","variableDefs","OperationDefinition","enter","leave","operation","variableNameUsed","Object","create","usages","getRecursiveVariableUsages","_i2","length","_ref2","node","name","value","_i4","_variableDefs2","variableDef","variableName","variable","reportError","concat","VariableDefinition","def","push"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainProject/BeamTeamCSC131/node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\r\n\r\n/**\r\n * No unused variables\r\n *\r\n * A GraphQL operation is only valid if all variables defined by an operation\r\n * are used, either directly or within a spread fragment.\r\n */\r\nexport function NoUnusedVariablesRule(context) {\r\n  var variableDefs = [];\r\n  return {\r\n    OperationDefinition: {\r\n      enter: function enter() {\r\n        variableDefs = [];\r\n      },\r\n      leave: function leave(operation) {\r\n        var variableNameUsed = Object.create(null);\r\n        var usages = context.getRecursiveVariableUsages(operation);\r\n\r\n        for (var _i2 = 0; _i2 < usages.length; _i2++) {\r\n          var _ref2 = usages[_i2];\r\n          var node = _ref2.node;\r\n          variableNameUsed[node.name.value] = true;\r\n        }\r\n\r\n        for (var _i4 = 0, _variableDefs2 = variableDefs; _i4 < _variableDefs2.length; _i4++) {\r\n          var variableDef = _variableDefs2[_i4];\r\n          var variableName = variableDef.variable.name.value;\r\n\r\n          if (variableNameUsed[variableName] !== true) {\r\n            context.reportError(new GraphQLError(operation.name ? \"Variable \\\"$\".concat(variableName, \"\\\" is never used in operation \\\"\").concat(operation.name.value, \"\\\".\") : \"Variable \\\"$\".concat(variableName, \"\\\" is never used.\"), variableDef));\r\n          }\r\n        }\r\n      }\r\n    },\r\n    VariableDefinition: function VariableDefinition(def) {\r\n      variableDefs.push(def);\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EAC7C,IAAIC,YAAY,GAAG,EAAE;EACrB,OAAO;IACLC,mBAAmB,EAAE;MACnBC,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtBF,YAAY,GAAG,EAAE;MACnB,CAAC;MACDG,KAAK,EAAE,SAASA,KAAKA,CAACC,SAAS,EAAE;QAC/B,IAAIC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;QAC1C,IAAIC,MAAM,GAAGT,OAAO,CAACU,0BAA0B,CAACL,SAAS,CAAC;QAE1D,KAAK,IAAIM,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,MAAM,CAACG,MAAM,EAAED,GAAG,EAAE,EAAE;UAC5C,IAAIE,KAAK,GAAGJ,MAAM,CAACE,GAAG,CAAC;UACvB,IAAIG,IAAI,GAAGD,KAAK,CAACC,IAAI;UACrBR,gBAAgB,CAACQ,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,IAAI;QAC1C;QAEA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEC,cAAc,GAAGjB,YAAY,EAAEgB,GAAG,GAAGC,cAAc,CAACN,MAAM,EAAEK,GAAG,EAAE,EAAE;UACnF,IAAIE,WAAW,GAAGD,cAAc,CAACD,GAAG,CAAC;UACrC,IAAIG,YAAY,GAAGD,WAAW,CAACE,QAAQ,CAACN,IAAI,CAACC,KAAK;UAElD,IAAIV,gBAAgB,CAACc,YAAY,CAAC,KAAK,IAAI,EAAE;YAC3CpB,OAAO,CAACsB,WAAW,CAAC,IAAIxB,YAAY,CAACO,SAAS,CAACU,IAAI,GAAG,cAAc,CAACQ,MAAM,CAACH,YAAY,EAAE,kCAAkC,CAAC,CAACG,MAAM,CAAClB,SAAS,CAACU,IAAI,CAACC,KAAK,EAAE,KAAK,CAAC,GAAG,cAAc,CAACO,MAAM,CAACH,YAAY,EAAE,mBAAmB,CAAC,EAAED,WAAW,CAAC,CAAC;UAC7O;QACF;MACF;IACF,CAAC;IACDK,kBAAkB,EAAE,SAASA,kBAAkBA,CAACC,GAAG,EAAE;MACnDxB,YAAY,CAACyB,IAAI,CAACD,GAAG,CAAC;IACxB;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}