{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\nimport { Kind } from \"../../language/kinds.mjs\";\n\n/**\r\n * Lone anonymous operation\r\n *\r\n * A GraphQL document is only valid if when it contains an anonymous operation\r\n * (the query short-hand) that it contains only that one operation definition.\r\n */\nexport function LoneAnonymousOperationRule(context) {\n  var operationCount = 0;\n  return {\n    Document: function Document(node) {\n      operationCount = node.definitions.filter(function (definition) {\n        return definition.kind === Kind.OPERATION_DEFINITION;\n      }).length;\n    },\n    OperationDefinition: function OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(new GraphQLError('This anonymous operation must be the only defined operation.', node));\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","Kind","LoneAnonymousOperationRule","context","operationCount","Document","node","definitions","filter","definition","kind","OPERATION_DEFINITION","length","OperationDefinition","name","reportError"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\r\nimport { Kind } from \"../../language/kinds.mjs\";\r\n\r\n/**\r\n * Lone anonymous operation\r\n *\r\n * A GraphQL document is only valid if when it contains an anonymous operation\r\n * (the query short-hand) that it contains only that one operation definition.\r\n */\r\nexport function LoneAnonymousOperationRule(context) {\r\n  var operationCount = 0;\r\n  return {\r\n    Document: function Document(node) {\r\n      operationCount = node.definitions.filter(function (definition) {\r\n        return definition.kind === Kind.OPERATION_DEFINITION;\r\n      }).length;\r\n    },\r\n    OperationDefinition: function OperationDefinition(node) {\r\n      if (!node.name && operationCount > 1) {\r\n        context.reportError(new GraphQLError('This anonymous operation must be the only defined operation.', node));\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,8BAA8B;AAC3D,SAASC,IAAI,QAAQ,0BAA0B;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,0BAA0BA,CAACC,OAAO,EAAE;EAClD,IAAIC,cAAc,GAAG,CAAC;EACtB,OAAO;IACLC,QAAQ,EAAE,SAASA,QAAQA,CAACC,IAAI,EAAE;MAChCF,cAAc,GAAGE,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC,UAAUC,UAAU,EAAE;QAC7D,OAAOA,UAAU,CAACC,IAAI,KAAKT,IAAI,CAACU,oBAAoB;MACtD,CAAC,CAAC,CAACC,MAAM;IACX,CAAC;IACDC,mBAAmB,EAAE,SAASA,mBAAmBA,CAACP,IAAI,EAAE;MACtD,IAAI,CAACA,IAAI,CAACQ,IAAI,IAAIV,cAAc,GAAG,CAAC,EAAE;QACpCD,OAAO,CAACY,WAAW,CAAC,IAAIf,YAAY,CAAC,8DAA8D,EAAEM,IAAI,CAAC,CAAC;MAC7G;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}