{"ast":null,"code":"/**\r\n * Given a Path and a key, return a new Path containing the new key.\r\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev: prev,\n    key: key,\n    typename: typename\n  };\n}\n/**\r\n * Given a Path, return an Array of the path keys.\r\n */\n\nexport function pathToArray(path) {\n  var flattened = [];\n  var curr = path;\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}","map":{"version":3,"names":["addPath","prev","key","typename","pathToArray","path","flattened","curr","push","reverse"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainProject/BeamTeamCSC131/node_modules/graphql/jsutils/Path.mjs"],"sourcesContent":["/**\r\n * Given a Path and a key, return a new Path containing the new key.\r\n */\r\nexport function addPath(prev, key, typename) {\r\n  return {\r\n    prev: prev,\r\n    key: key,\r\n    typename: typename\r\n  };\r\n}\r\n/**\r\n * Given a Path, return an Array of the path keys.\r\n */\r\n\r\nexport function pathToArray(path) {\r\n  var flattened = [];\r\n  var curr = path;\r\n\r\n  while (curr) {\r\n    flattened.push(curr.key);\r\n    curr = curr.prev;\r\n  }\r\n\r\n  return flattened.reverse();\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,OAAOA,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,EAAE;EAC3C,OAAO;IACLF,IAAI,EAAEA,IAAI;IACVC,GAAG,EAAEA,GAAG;IACRC,QAAQ,EAAEA;EACZ,CAAC;AACH;AACA;AACA;AACA;;AAEA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAE;EAChC,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,IAAI,GAAGF,IAAI;EAEf,OAAOE,IAAI,EAAE;IACXD,SAAS,CAACE,IAAI,CAACD,IAAI,CAACL,GAAG,CAAC;IACxBK,IAAI,GAAGA,IAAI,CAACN,IAAI;EAClB;EAEA,OAAOK,SAAS,CAACG,OAAO,CAAC,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}