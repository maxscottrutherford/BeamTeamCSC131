{"ast":null,"code":"import { GraphQLError } from \"../../error/GraphQLError.mjs\";\n\n/**\r\n * Unique input field names\r\n *\r\n * A GraphQL input object value is only valid if all supplied fields are\r\n * uniquely named.\r\n */\nexport function UniqueInputFieldNamesRule(context) {\n  var knownNameStack = [];\n  var knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter: function enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n      leave: function leave() {\n        knownNames = knownNameStack.pop();\n      }\n    },\n    ObjectField: function ObjectField(node) {\n      var fieldName = node.name.value;\n      if (knownNames[fieldName]) {\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    }\n  };\n}","map":{"version":3,"names":["GraphQLError","UniqueInputFieldNamesRule","context","knownNameStack","knownNames","Object","create","ObjectValue","enter","push","leave","pop","ObjectField","node","fieldName","name","value","reportError","concat"],"sources":["C:/Users/mabur/Desktop/College/SacState/CSC131/MainRepo6/BeamTeamCSC131/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs"],"sourcesContent":["import { GraphQLError } from \"../../error/GraphQLError.mjs\";\r\n\r\n/**\r\n * Unique input field names\r\n *\r\n * A GraphQL input object value is only valid if all supplied fields are\r\n * uniquely named.\r\n */\r\nexport function UniqueInputFieldNamesRule(context) {\r\n  var knownNameStack = [];\r\n  var knownNames = Object.create(null);\r\n  return {\r\n    ObjectValue: {\r\n      enter: function enter() {\r\n        knownNameStack.push(knownNames);\r\n        knownNames = Object.create(null);\r\n      },\r\n      leave: function leave() {\r\n        knownNames = knownNameStack.pop();\r\n      }\r\n    },\r\n    ObjectField: function ObjectField(node) {\r\n      var fieldName = node.name.value;\r\n\r\n      if (knownNames[fieldName]) {\r\n        context.reportError(new GraphQLError(\"There can be only one input field named \\\"\".concat(fieldName, \"\\\".\"), [knownNames[fieldName], node.name]));\r\n      } else {\r\n        knownNames[fieldName] = node.name;\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CAACC,OAAO,EAAE;EACjD,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIC,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EACpC,OAAO;IACLC,WAAW,EAAE;MACXC,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtBL,cAAc,CAACM,IAAI,CAACL,UAAU,CAAC;QAC/BA,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;MAClC,CAAC;MACDI,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtBN,UAAU,GAAGD,cAAc,CAACQ,GAAG,CAAC,CAAC;MACnC;IACF,CAAC;IACDC,WAAW,EAAE,SAASA,WAAWA,CAACC,IAAI,EAAE;MACtC,IAAIC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAACC,KAAK;MAE/B,IAAIZ,UAAU,CAACU,SAAS,CAAC,EAAE;QACzBZ,OAAO,CAACe,WAAW,CAAC,IAAIjB,YAAY,CAAC,4CAA4C,CAACkB,MAAM,CAACJ,SAAS,EAAE,KAAK,CAAC,EAAE,CAACV,UAAU,CAACU,SAAS,CAAC,EAAED,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;MAClJ,CAAC,MAAM;QACLX,UAAU,CAACU,SAAS,CAAC,GAAGD,IAAI,CAACE,IAAI;MACnC;IACF;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}